"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/query";
exports.ids = ["pages/api/query"];
exports.modules = {

/***/ "@azure/arm-appservice":
/*!****************************************!*\
  !*** external "@azure/arm-appservice" ***!
  \****************************************/
/***/ ((module) => {

module.exports = require("@azure/arm-appservice");

/***/ }),

/***/ "@azure/arm-compute":
/*!*************************************!*\
  !*** external "@azure/arm-compute" ***!
  \*************************************/
/***/ ((module) => {

module.exports = require("@azure/arm-compute");

/***/ }),

/***/ "@azure/arm-costmanagement":
/*!********************************************!*\
  !*** external "@azure/arm-costmanagement" ***!
  \********************************************/
/***/ ((module) => {

module.exports = require("@azure/arm-costmanagement");

/***/ }),

/***/ "@azure/arm-monitor":
/*!*************************************!*\
  !*** external "@azure/arm-monitor" ***!
  \*************************************/
/***/ ((module) => {

module.exports = require("@azure/arm-monitor");

/***/ }),

/***/ "@azure/arm-resourcehealth":
/*!********************************************!*\
  !*** external "@azure/arm-resourcehealth" ***!
  \********************************************/
/***/ ((module) => {

module.exports = require("@azure/arm-resourcehealth");

/***/ }),

/***/ "@azure/arm-resources":
/*!***************************************!*\
  !*** external "@azure/arm-resources" ***!
  \***************************************/
/***/ ((module) => {

module.exports = require("@azure/arm-resources");

/***/ }),

/***/ "@azure/arm-security":
/*!**************************************!*\
  !*** external "@azure/arm-security" ***!
  \**************************************/
/***/ ((module) => {

module.exports = require("@azure/arm-security");

/***/ }),

/***/ "@azure/identity":
/*!**********************************!*\
  !*** external "@azure/identity" ***!
  \**********************************/
/***/ ((module) => {

module.exports = require("@azure/identity");

/***/ }),

/***/ "@azure/monitor-query":
/*!***************************************!*\
  !*** external "@azure/monitor-query" ***!
  \***************************************/
/***/ ((module) => {

module.exports = require("@azure/monitor-query");

/***/ }),

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "@azure/openai":
/*!********************************!*\
  !*** external "@azure/openai" ***!
  \********************************/
/***/ ((module) => {

module.exports = import("@azure/openai");;

/***/ }),

/***/ "axios":
/*!************************!*\
  !*** external "axios" ***!
  \************************/
/***/ ((module) => {

module.exports = import("axios");;

/***/ }),

/***/ "chart.js/auto":
/*!********************************!*\
  !*** external "chart.js/auto" ***!
  \********************************/
/***/ ((module) => {

module.exports = import("chart.js/auto");;

/***/ }),

/***/ "(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fquery&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cquery.js&middlewareConfigBase64=e30%3D!":
/*!****************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fquery&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cquery.js&middlewareConfigBase64=e30%3D! ***!
  \****************************************************************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/pages-api/module.compiled */ \"(api)/./node_modules/next/dist/server/future/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(api)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_query_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pages\\api\\query.js */ \"(api)/./pages/api/query.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_pages_api_query_js__WEBPACK_IMPORTED_MODULE_3__]);\n_pages_api_query_js__WEBPACK_IMPORTED_MODULE_3__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_query_js__WEBPACK_IMPORTED_MODULE_3__, \"default\"));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_query_js__WEBPACK_IMPORTED_MODULE_3__, \"config\");\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/query\",\n        pathname: \"/api/query\",\n        // The following aren't used in production.\n        bundlePath: \"\",\n        filename: \"\"\n    },\n    userland: _pages_api_query_js__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9pbmRleC5qcz9raW5kPVBBR0VTX0FQSSZwYWdlPSUyRmFwaSUyRnF1ZXJ5JnByZWZlcnJlZFJlZ2lvbj0mYWJzb2x1dGVQYWdlUGF0aD0uJTJGcGFnZXMlNUNhcGklNUNxdWVyeS5qcyZtaWRkbGV3YXJlQ29uZmlnQmFzZTY0PWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBc0c7QUFDdkM7QUFDTDtBQUMxRDtBQUNtRDtBQUNuRDtBQUNBLGlFQUFlLHdFQUFLLENBQUMsZ0RBQVEsWUFBWSxFQUFDO0FBQzFDO0FBQ08sZUFBZSx3RUFBSyxDQUFDLGdEQUFRO0FBQ3BDO0FBQ08sd0JBQXdCLGdIQUFtQjtBQUNsRDtBQUNBLGNBQWMseUVBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxZQUFZO0FBQ1osQ0FBQzs7QUFFRCxxQyIsInNvdXJjZXMiOlsid2VicGFjazovL2F6dXJlLWFpLWluZnJhLWFzc2lzdGFudC8/YzEzNyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQYWdlc0FQSVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLW1vZHVsZXMvcGFnZXMtYXBpL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IGhvaXN0IH0gZnJvbSBcIm5leHQvZGlzdC9idWlsZC90ZW1wbGF0ZXMvaGVscGVyc1wiO1xuLy8gSW1wb3J0IHRoZSB1c2VybGFuZCBjb2RlLlxuaW1wb3J0ICogYXMgdXNlcmxhbmQgZnJvbSBcIi4vcGFnZXNcXFxcYXBpXFxcXHF1ZXJ5LmpzXCI7XG4vLyBSZS1leHBvcnQgdGhlIGhhbmRsZXIgKHNob3VsZCBiZSB0aGUgZGVmYXVsdCBleHBvcnQpLlxuZXhwb3J0IGRlZmF1bHQgaG9pc3QodXNlcmxhbmQsIFwiZGVmYXVsdFwiKTtcbi8vIFJlLWV4cG9ydCBjb25maWcuXG5leHBvcnQgY29uc3QgY29uZmlnID0gaG9pc3QodXNlcmxhbmQsIFwiY29uZmlnXCIpO1xuLy8gQ3JlYXRlIGFuZCBleHBvcnQgdGhlIHJvdXRlIG1vZHVsZSB0aGF0IHdpbGwgYmUgY29uc3VtZWQuXG5leHBvcnQgY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgUGFnZXNBUElSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuUEFHRVNfQVBJLFxuICAgICAgICBwYWdlOiBcIi9hcGkvcXVlcnlcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS9xdWVyeVwiLFxuICAgICAgICAvLyBUaGUgZm9sbG93aW5nIGFyZW4ndCB1c2VkIGluIHByb2R1Y3Rpb24uXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcIlwiXG4gICAgfSxcbiAgICB1c2VybGFuZFxufSk7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBhZ2VzLWFwaS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fquery&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cquery.js&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api)/./pages/api/query.js":
/*!****************************!*\
  !*** ./pages/api/query.js ***!
  \****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var _azure_identity__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/identity */ \"@azure/identity\");\n/* harmony import */ var _azure_identity__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_azure_identity__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _azure_monitor_query__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @azure/monitor-query */ \"@azure/monitor-query\");\n/* harmony import */ var _azure_monitor_query__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_azure_monitor_query__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _azure_arm_compute__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @azure/arm-compute */ \"@azure/arm-compute\");\n/* harmony import */ var _azure_arm_compute__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_azure_arm_compute__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _azure_arm_costmanagement__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @azure/arm-costmanagement */ \"@azure/arm-costmanagement\");\n/* harmony import */ var _azure_arm_costmanagement__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_azure_arm_costmanagement__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _azure_arm_monitor__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @azure/arm-monitor */ \"@azure/arm-monitor\");\n/* harmony import */ var _azure_arm_monitor__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_azure_arm_monitor__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _azure_arm_resources__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @azure/arm-resources */ \"@azure/arm-resources\");\n/* harmony import */ var _azure_arm_resources__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_azure_arm_resources__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _azure_arm_appservice__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @azure/arm-appservice */ \"@azure/arm-appservice\");\n/* harmony import */ var _azure_arm_appservice__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_azure_arm_appservice__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! axios */ \"axios\");\n/* harmony import */ var chart_js_auto__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! chart.js/auto */ \"chart.js/auto\");\n/* harmony import */ var _azure_arm_resourcehealth__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @azure/arm-resourcehealth */ \"@azure/arm-resourcehealth\");\n/* harmony import */ var _azure_arm_resourcehealth__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(_azure_arm_resourcehealth__WEBPACK_IMPORTED_MODULE_9__);\n/* harmony import */ var _azure_arm_security__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @azure/arm-security */ \"@azure/arm-security\");\n/* harmony import */ var _azure_arm_security__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(_azure_arm_security__WEBPACK_IMPORTED_MODULE_10__);\n/* harmony import */ var _azure_openai__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @azure/openai */ \"@azure/openai\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([axios__WEBPACK_IMPORTED_MODULE_7__, chart_js_auto__WEBPACK_IMPORTED_MODULE_8__, _azure_openai__WEBPACK_IMPORTED_MODULE_11__]);\n([axios__WEBPACK_IMPORTED_MODULE_7__, chart_js_auto__WEBPACK_IMPORTED_MODULE_8__, _azure_openai__WEBPACK_IMPORTED_MODULE_11__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\n\n\n\n\n\n\n\n\n// Initialize the OpenAI Client\nconst endpoint = process.env.AZURE_OPENAI_ENDPOINT;\nconst apiKey = process.env.AZURE_OPENAI_API_KEY;\n// Initialize Azure clients\nlet credential, monitorClient, resourceClient, computeClient, webClient, costClient, logsClient;\nasync function initializeClients() {\n    if (!credential) {\n        credential = new _azure_identity__WEBPACK_IMPORTED_MODULE_0__.DefaultAzureCredential();\n        monitorClient = new _azure_arm_monitor__WEBPACK_IMPORTED_MODULE_4__.MonitorClient(credential, process.env.AZURE_SUBSCRIPTION_ID);\n        resourceClient = new _azure_arm_resources__WEBPACK_IMPORTED_MODULE_5__.ResourceManagementClient(credential, process.env.AZURE_SUBSCRIPTION_ID);\n        computeClient = new _azure_arm_compute__WEBPACK_IMPORTED_MODULE_2__.ComputeManagementClient(credential, process.env.AZURE_SUBSCRIPTION_ID);\n        webClient = new _azure_arm_appservice__WEBPACK_IMPORTED_MODULE_6__.WebSiteManagementClient(credential, process.env.AZURE_SUBSCRIPTION_ID);\n        costClient = new _azure_arm_costmanagement__WEBPACK_IMPORTED_MODULE_3__.CostManagementClient(credential);\n        logsClient = new _azure_monitor_query__WEBPACK_IMPORTED_MODULE_1__.LogsQueryClient(credential);\n    }\n}\nasync function getResourceMetrics(resource, timespan, interval = \"PT1H\") {\n    const supportedTypes = [\n        \"Microsoft.Compute/virtualMachines\",\n        \"Microsoft.Web/sites\"\n    ];\n    if (!supportedTypes.includes(resource.type)) {\n        return null;\n    }\n    try {\n        const metrics = await monitorClient.metrics.list(resource.id, {\n            timespan,\n            interval,\n            metricnames: resource.type === \"Microsoft.Compute/virtualMachines\" ? \"Percentage CPU,Available Memory Bytes\" : \"CpuPercentage,MemoryPercentage\"\n        });\n        if (!metrics.value?.length) return null;\n        // Transform metrics into the expected format\n        const metricsData = {\n            resourceName: resource.name,\n            resourceType: resource.type,\n            metrics: {\n                cpu: {\n                    current: metrics.value.find((m)=>m.name.value === (resource.type === \"Microsoft.Compute/virtualMachines\" ? \"Percentage CPU\" : \"CpuPercentage\"))?.timeseries[0]?.data.slice(-1)[0]?.average || 0,\n                    history: metrics.value.find((m)=>m.name.value === (resource.type === \"Microsoft.Compute/virtualMachines\" ? \"Percentage CPU\" : \"CpuPercentage\"))?.timeseries[0]?.data.map((point)=>point.average || 0) || []\n                },\n                memory: {\n                    current: metrics.value.find((m)=>m.name.value === (resource.type === \"Microsoft.Compute/virtualMachines\" ? \"Available Memory Bytes\" : \"MemoryPercentage\"))?.timeseries[0]?.data.slice(-1)[0]?.average || 0,\n                    history: metrics.value.find((m)=>m.name.value === (resource.type === \"Microsoft.Compute/virtualMachines\" ? \"Available Memory Bytes\" : \"MemoryPercentage\"))?.timeseries[0]?.data.map((point)=>point.average || 0) || []\n                }\n            },\n            timestamps: metrics.value[0]?.timeseries[0]?.data.map((point)=>point.timeStamp) || []\n        };\n        return metricsData;\n    } catch (error) {\n        console.warn(`Could not fetch metrics for ${resource.name}:`, error.message);\n        return null;\n    }\n}\nasync function getResourceCosts(scope) {\n    try {\n        const token = await credential.getToken(\"https://management.azure.com/.default\");\n        const today = new Date();\n        const startDate = new Date(today);\n        startDate.setDate(today.getDate() - 30);\n        const startDateStr = startDate.toISOString().split(\"T\")[0];\n        const endDateStr = today.toISOString().split(\"T\")[0];\n        const response = await axios__WEBPACK_IMPORTED_MODULE_7__[\"default\"].post(`https://management.azure.com${scope}/providers/Microsoft.CostManagement/query`, {\n            type: \"ActualCost\",\n            timeframe: \"Custom\",\n            timePeriod: {\n                from: `${startDateStr}T00:00:00Z`,\n                to: `${endDateStr}T23:59:59Z`\n            },\n            dataset: {\n                granularity: \"None\",\n                aggregation: {\n                    totalCost: {\n                        name: \"Cost\",\n                        function: \"Sum\"\n                    }\n                },\n                grouping: [\n                    {\n                        type: \"Dimension\",\n                        name: \"ServiceName\"\n                    }\n                ]\n            }\n        }, {\n            headers: {\n                Authorization: `Bearer ${token.token}`,\n                \"Content-Type\": \"application/json\"\n            },\n            params: {\n                \"api-version\": \"2023-08-01\"\n            }\n        });\n        // Debug logging\n        console.log(\"Cost API Response:\", JSON.stringify(response.data, null, 2));\n        if (!response.data?.properties?.rows) {\n            console.log(\"No rows found in cost data\");\n            return {\n                rows: [],\n                totalCost: 0,\n                dailyAverage: 0,\n                projectedCost: 0\n            };\n        }\n        const rows = response.data.properties.rows;\n        let total = 0;\n        const processedRows = rows.map((row)=>{\n            const serviceName = String(row[0] || \"Unknown Service\");\n            const cost = parseFloat(row[1] || 0);\n            if (!isNaN(cost)) {\n                total += cost;\n            }\n            return [\n                serviceName,\n                cost\n            ];\n        });\n        const dailyAvg = total / 30;\n        const projected = dailyAvg * 30;\n        return {\n            rows: processedRows,\n            totalCost: total,\n            dailyAverage: dailyAvg,\n            projectedCost: projected\n        };\n    } catch (error) {\n        console.error(\"Error fetching costs:\", error.response?.data || error.message);\n        return {\n            rows: [],\n            totalCost: 0,\n            dailyAverage: 0,\n            projectedCost: 0,\n            error: error.message\n        };\n    }\n}\nasync function handler(req, res) {\n    if (req.method !== \"POST\") {\n        return res.status(405).json({\n            message: \"Method not allowed\"\n        });\n    }\n    try {\n        await initializeClients();\n        const { messages } = req.body;\n        const userMessage = messages[messages.length - 1].content.toLowerCase();\n        let azureData = null;\n        let errorDetails = null;\n        try {\n            // List all resources\n            if (userMessage.includes(\"list\") && userMessage.includes(\"resource\")) {\n                try {\n                    const resources = [];\n                    console.log(\"Fetching resources...\");\n                    // Get all resource groups first\n                    const resourceGroups = [];\n                    for await (const group of resourceClient.resourceGroups.list()){\n                        resourceGroups.push(group.name);\n                    }\n                    console.log(`Found ${resourceGroups.length} resource groups`);\n                    // Get resources from each resource group\n                    for (const groupName of resourceGroups){\n                        try {\n                            for await (const resource of resourceClient.resources.listByResourceGroup(groupName)){\n                                resources.push({\n                                    name: resource.name,\n                                    type: resource.type,\n                                    location: resource.location,\n                                    resourceGroup: groupName,\n                                    id: resource.id,\n                                    tags: resource.tags || {},\n                                    provisioningState: resource.provisioningState,\n                                    createdTime: resource.createdTime\n                                });\n                            }\n                        } catch (groupError) {\n                            console.warn(`Error listing resources in group ${groupName}:`, groupError.message);\n                        }\n                    }\n                    console.log(`Found ${resources.length} total resources`);\n                    // Sort resources by type and name\n                    resources.sort((a, b)=>{\n                        if (a.type === b.type) {\n                            return a.name.localeCompare(b.name);\n                        }\n                        return a.type.localeCompare(b.type);\n                    });\n                    azureData = {\n                        type: \"resources\",\n                        data: resources,\n                        count: resources.length,\n                        resourceGroups: resourceGroups.length\n                    };\n                } catch (resourceError) {\n                    console.error(\"Error listing resources:\", resourceError);\n                    azureData = {\n                        type: \"resources\",\n                        data: [],\n                        count: 0,\n                        error: resourceError.message\n                    };\n                }\n            } else if (userMessage.includes(\"spending\") || userMessage.includes(\"cost\")) {\n                const scope = `/subscriptions/${process.env.AZURE_SUBSCRIPTION_ID}`;\n                const costData = await getResourceCosts(scope);\n                azureData = {\n                    type: \"costs\",\n                    data: {\n                        total: costData.totalCost.toFixed(2),\n                        projected: costData.projectedCost.toFixed(2),\n                        byService: costData.rows.map((row)=>({\n                                name: row[0],\n                                cost: row[1].toFixed(2),\n                                percentage: costData.totalCost > 0 ? (row[1] / costData.totalCost * 100).toFixed(1) : \"0\"\n                            }))\n                    },\n                    error: costData.error\n                };\n            } else if (userMessage.includes(\"cpu\") || userMessage.includes(\"usage\")) {\n                const resourceGroups = [];\n                for await (const group of resourceClient.resourceGroups.list()){\n                    resourceGroups.push(group.name);\n                }\n                const vmsPromises = resourceGroups.map((group)=>computeClient.virtualMachines.list(group).catch((err)=>{\n                        console.warn(`Error listing VMs in group ${group}:`, err.message);\n                        return [];\n                    }));\n                const vmLists = await Promise.all(vmsPromises);\n                const allVMs = vmLists.flat().filter((vm)=>vm && vm.id);\n                if (allVMs.length === 0) {\n                    azureData = {\n                        type: \"metrics\",\n                        data: [],\n                        message: \"No virtual machines found\"\n                    };\n                } else {\n                    const timespan = \"PT24H\";\n                    const metricsPromises = allVMs.map((vm)=>getResourceMetrics({\n                            id: vm.id,\n                            name: vm.name,\n                            type: \"Microsoft.Compute/virtualMachines\"\n                        }, timespan).catch((err)=>{\n                            console.warn(`Error fetching metrics for ${vm.name}:`, err.message);\n                            return null;\n                        }));\n                    const metricsResults = await Promise.all(metricsPromises);\n                    const validMetrics = metricsResults.filter((m)=>m !== null);\n                    azureData = {\n                        type: \"metrics\",\n                        data: validMetrics,\n                        count: validMetrics.length\n                    };\n                }\n            }\n        } catch (dataError) {\n            console.error(\"Error fetching Azure data:\", dataError);\n            errorDetails = dataError.message;\n        }\n        // Always return a valid response structure\n        return res.status(200).json({\n            message: messages[messages.length - 1].content,\n            azureData: azureData || {\n                type: \"error\",\n                error: true,\n                message: errorDetails || \"No data available\"\n            }\n        });\n    } catch (error) {\n        console.error(\"Handler error:\", error);\n        return res.status(500).json({\n            message: \"Error processing request\",\n            error: error.message,\n            azureData: {\n                type: \"error\",\n                error: true,\n                message: error.message\n            }\n        });\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./pages/api/query.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fquery&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cquery.js&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();